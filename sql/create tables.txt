
-- Table: public.roles

-- DROP TABLE public.roles;

CREATE TABLE public.roles
(
    role_id integer NOT NULL DEFAULT nextval('roles_role_id_seq'::regclass),
    role_name text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT roles_pkey PRIMARY KEY (role_id)
)

TABLESPACE pg_default;

ALTER TABLE public.roles
    OWNER to postgres;




-- Table: public.user_login

-- DROP TABLE public.user_login;

CREATE TABLE public.user_login
(
    user_id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    user_name text COLLATE pg_catalog."default",
    user_password text COLLATE pg_catalog."default",
    user_role_id integer,
    user_session_id integer,
    hebrow_name text COLLATE pg_catalog."default",
    CONSTRAINT user_login_pkey PRIMARY KEY (user_id),
	CONSTRAINT user_login_fk FOREIGN KEY(user_role_id) REFERENCES public.roles(role_id)
)

TABLESPACE pg_default;

ALTER TABLE public.user_login
    OWNER to postgres;



-- Table: public.cubes

-- DROP TABLE public.cubes;

CREATE TABLE public.cubes
(
    cube_id integer NOT NULL DEFAULT nextval('cubes_cube_id_seq'::regclass),
    title text COLLATE pg_catalog."default" NOT NULL,
    content text COLLATE pg_catalog."default" NOT NULL,
    grade integer,
    position integer,
    user_update text COLLATE pg_catalog."default" NOT NULL,
    last_update_time timestamp with time zone NOT NULL,
    CONSTRAINT cubes_pkey PRIMARY KEY (cube_id)
)

TABLESPACE pg_default;

ALTER TABLE public.cubes
    OWNER to postgres;